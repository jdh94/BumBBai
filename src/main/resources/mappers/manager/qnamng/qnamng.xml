<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="QNA_MNG">

    <resultMap type="HashMap" id="CastingMap">
        <result property="CONTENT" column="CONTENT" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="ANSWER_CONTENT" column="ANSWER_CONTENT" jdbcType="CLOB" javaType="java.lang.String" />
    </resultMap>

   <select id="GET_QNA_LIST" parameterType="hashmap" resultType="hashmap" resultMap="CastingMap" >
        /* 질의응답 리스트 조회 */
		SELECT
			RN,
		    ID,
		    (SELECT VALUE FROM CODE_VALUE CV WHERE CLASS_CODE = '021' AND CODE = ANSWER_STATUS ) AS ANSWER_STATUS,		    
		    TITLE,
		    REG_DATE,
		    ANSWER_DATE
		FROM
			(
		        SELECT
		            ROWNUM AS RN,
		            ID,
		            ANSWER_STATUS,
		            TITLE,
		            REG_DATE,
		            ANSWER_DATE
		        FROM
		            (
		                SELECT
		                    ID,
		                    ANSWER_STATUS,
		                    TITLE,
		                    TO_CHAR(REG_DATE, 'YYYY-MM-DD') REG_DATE,
							TO_CHAR(ANSWER_DATE, 'YYYY-MM-DD') ANSWER_DATE
		                FROM
		                    QA_BOARD
		                <include refid="search_query" />
	                    ORDER BY ID DESC
		            )
		        WHERE ROWNUM <![CDATA[<=]]> #{currpage} * #{displaycnt}
			)
		WHERE RN  <![CDATA[>]]> (#{currpage} - 1 ) * #{displaycnt}
	</select>
        
   <select id="GET_QNA_LIST_EXCEL" parameterType="hashmap" resultType="hashmap" resultMap="CastingMap" >
        /* 질의응답 엑셀 출력 */
		SELECT
			RN,
		    ID,
		    (SELECT VALUE FROM CODE_VALUE CV WHERE CLASS_CODE = '021' AND CODE = ANSWER_STATUS ) AS ANSWER_STATUS,		    
		    TITLE,
		    REG_DATE,
		    ANSWER_DATE
		FROM
			(
		        SELECT
		            ROWNUM AS RN,
		            ID,
		            ANSWER_STATUS,
		            TITLE,
		            REG_DATE,
		            ANSWER_DATE
		        FROM
		            (
		                SELECT
		                    ID,
		                    ANSWER_STATUS,
		                    TITLE,
		                    TO_CHAR(REG_DATE, 'YYYY-MM-DD') REG_DATE,
							TO_CHAR(ANSWER_DATE, 'YYYY-MM-DD') ANSWER_DATE
		                FROM
		                    QA_BOARD
		                <include refid="search_query" />
	                    ORDER BY ID DESC
		            )
		    )
	</select>

    <select id="GET_QNA_LIST_COUNT" parameterType="hashmap" resultType="int" >
        /* 질의응답 리스트 카운트조회 */
        SELECT 
        	COUNT(1) 
       	FROM 
        	QA_BOARD
       	<include refid = "search_query" />
	</select>

    <select id="GET_QNA_INFO" parameterType="hashmap" resultType="hashmap" resultMap="CastingMap" >
        /* 질의응답 정보 조회 */
        SELECT 
        	ID,
        	OPEN_YN,
        	TITLE,
        	QUERIST_NAME,
        	CONTENT,
        	ANSWER_CONTENT,
			TO_CHAR(REG_DATE, 'YYYY-MM-DD') AS REG_DATE,
			ANSWER_STATUS
       	FROM 
        	QA_BOARD
        WHERE
        	ID = #{qnaId}
    </select>


	
	<update id="ADD_REPLY" parameterType="map">
        /* 답변 등록 */
        UPDATE 
        	QA_BOARD
        SET
       		SU_ID = #{worker_id},
       		ANSWER_WORKER_ID = #{worker_id},
       		ANSWER_STATUS = #{answer_status},
       		ANSWER_CONTENT = #{answer_content, jdbcType=VARCHAR},
       		ANSWER_DATE = sysdate
       	WHERE
       		ID = #{qna_id}
	</update>
		
	<sql id="search_query">
		<where>
			1 = 1	
			<choose>
				<when test="status != null and status == '01'.toString()">
					AND ANSWER_STATUS = #{status}
				</when>
				<when test="status != null and status == '02'.toString()">
					AND ANSWER_STATUS = #{status}
				</when>
				<when test="status != null and status == '03'.toString()">
					AND ANSWER_STATUS = #{status}
				</when>
				<when test="status != null and status == '04'.toString()">
					AND ANSWER_STATUS = #{status}
				</when>
			</choose>
			
			<if test="searchKeyword != null and !''.equals(searchKeyword)">
				<if test="search_type_option != null and search_type_option == 'title'.toString()">
				   AND TITLE LIKE '%' || #{searchKeyword} || '%'
				</if>
				<if test="search_type_option != null and search_type_option == 'content'.toString()">
				   AND CONTENT LIKE '%' || #{searchKeyword} || '%'
				</if>
			</if>	
			
		</where>
	</sql>
	
</mapper>